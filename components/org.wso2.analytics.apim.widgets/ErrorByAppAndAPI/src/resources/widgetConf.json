{
  "name": "ErrorByAppAndAPIwidget",
  "id": "ErrorByAppAndAPI",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@App:name('APIM_ERROR_SUMMARY')\ndefine stream ErrorSummaryStream (apiName string, apiVersion string, apiResourceTemplate string, apiMethod string, apiCreator string,\napiCreatorTenantDomain string, applicationId string, applicationName string, applicationOwner string, responseCode int,\nsuccessCount int, faultCount int, throttledCount int, timestamp long);\n@store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB',field.length = \"apiMethod:40\")\ndefine aggregation ApiErrorAnalysisAgg\nfrom ErrorSummaryStream\nselect apiName, apiVersion, apiMethod, apiResourceTemplate, applicationName, applicationOwner, responseCode, ifThenElse((responseCode/100) == 4,1,0) as _4xx,\nifThenElse((responseCode/100) == 5,1,0) as _5xx, sum(successCount) as successCount, sum(faultCount) as faultCount, sum(throttledCount) as throttledCount,\napiCreator, apiCreatorTenantDomain\ngroup by apiName, apiVersion, responseCode, apiResourceTemplate, applicationId\naggregate by timestamp every seconds...years;",
          "queryData": {
            "errorQuery": "from ApiErrorAnalysisAgg {{querystring}} within {{from}}L, {{to}}L per \"{{per}}s\" select {{selectPhase}} group by {{groupByPhase}} {{orderBy}} limit {{limit}};",
            "totalErrorQuery": "from ApiErrorAnalysisAgg within {{from}}L, {{to}}L per \"{{per}}s\" select {{selectPhase}};"
          },
          "publishingInterval": 60
        }
      }
    },
    "options": [
    ]
  }
}
