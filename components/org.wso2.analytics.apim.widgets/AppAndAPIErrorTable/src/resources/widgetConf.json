{
  "name": "AppAndAPIErrorTablewidget",
  "id": "AppAndAPIErrorTable",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber", "publisher"],
      "publisherWidgetOutputs": ["apiName", "apiID", "operationID", "appID"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@App:name('APIM_ERROR_SUMMARY')\ndefine stream ErrorSummaryStream (apiName string, apiVersion string, apiResourceTemplate string, apiMethod string, apiCreator string,\napiCreatorTenantDomain string, applicationId string, applicationName string, applicationOwner string, responseCode int,\n_4xx int, _5xx int, successCount int, faultCount int, throttledCount int, timestamp long);  @primaryKey('API_ID')  @store(type=\"rdbms\" , datasource= \"AM_DB\")  define table AM_API(API_ID int,API_PROVIDER string,API_NAME string,API_VERSION string,CONTEXT string,CONTEXT_TEMPLATE string,API_TIER string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string);   @primaryKey('URL_MAPPING_ID') @store(type= \"rdbms\" , datasource= \"AM_DB\")  define table AM_API_URL_MAPPING(URL_MAPPING_ID int,API_ID int,HTTP_METHOD string,AUTH_SCHEME string,URL_PATTERN string,THROTTLING_TIER string,MEDIATION_SCRIPT string); @primaryKey('APPLICATION_ID') @store(type= \"rdbms\" , datasource= \"AM_DB\")  define table AM_APPLICATION(APPLICATION_ID int, NAME string, SUBSCRIBER_ID int, APPLICATION_TIER string, CALLBACK_URL string, DESCRIPTION string, APPLICATION_STATUS  string, GROUP_ID string, CREATED_BY string, CREATED_TIME string, UPDATED_BY string, UPDATED_TIME string, UUID string, TOKEN_TYPE string); @primaryKey('SUBSCRIBER_ID') @store(type= \"rdbms\" , datasource= \"AM_DB\") define table AM_SUBSCRIBER (SUBSCRIBER_ID int, USER_ID string, TENANT_ID int, EMAIL_ADDRESS string, DATE_SUBSCRIBED string, CREATED_BY string, CREATED_TIME string, UPDATED_BY string, UPDATED_TIME string); @store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB',field.length =  \"apiMethod:40 \") define aggregation ApiErrorAnalysisAgg\nfrom ErrorSummaryStream\nselect apiName, apiVersion, apiMethod, apiResourceTemplate, applicationName, applicationOwner, responseCode, sum(_4xx) as _4xx,\nsum(_5xx) as _5xx, sum(successCount) as successCount, sum(faultCount) as faultCount, sum(throttledCount) as throttledCount,\napiCreator, apiCreatorTenantDomain\ngroup by apiName, apiVersion, responseCode, apiResourceTemplate, applicationId\naggregate by timestamp every seconds...years;",
          "queryData": {
            "drillDownQuery": "from ApiErrorAnalysisAgg on apiCreatorTenantDomain=='{{tenantDomain}}' {{querystring}} within {{from}}L, {{to}}L per \"{{per}}s\" select {{selectPhase}} group by {{groupByPhase}} {{orderBy}} limit {{limit}};",
            "listApisQuery": "from AM_API on {{contextContainsCondition}} select API_NAME group by API_NAME",
            "listVersionsQuery": "from AM_API on ({{contextContainsCondition}} AND API_NAME == '{{selectedAPI}}' ) select API_ID, API_VERSION group by API_ID, API_VERSION",
            "listOperationsQuery": "from AM_API_URL_MAPPING on (API_ID == {{selectedVersion}} ) select URL_MAPPING_ID,URL_PATTERN,HTTP_METHOD group by URL_MAPPING_ID,URL_PATTERN,HTTP_METHOD",
            "listAppsQuery": "select NAME,AM_APPLICATION.CREATED_BY,APPLICATION_ID from AM_APPLICATION INNER JOIN AM_SUBSCRIBER on AM_APPLICATION.SUBSCRIBER_ID = AM_SUBSCRIBER.SUBSCRIBER_ID where TENANT_ID={{tenantId}} group by NAME,AM_APPLICATION.CREATED_BY,APPLICATION_ID"
          },
          "publishingInterval": 60
        }
      },
      "listAppsQueryConfigs" : {
        "type" : "RDBMSStreamingDataProvider",
        "config" : {
          "datasourceName": "AM_DB",
          "queryData" : {
            "queryName": "listApisQuery"
          },
          "tableName": "AM_APPLICATION",
          "incrementalColumn": "APPLICATION_ID",
          "publishingLimit": 2147483647,
          "purgingInterval": 6,
          "purgingLimit": 6,
          "isPurgingEnable": false
        }
      }
    },
    "options": [
    ]
  }
}
